[{"/home/tama/vscode/projects/airbnbclone/packages/web/src/index.tsx":"1","/home/tama/vscode/projects/airbnbclone/packages/web/src/reportWebVitals.ts":"2","/home/tama/vscode/projects/airbnbclone/packages/web/src/Router.tsx":"3","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/amenities.tsx":"4","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/bedrooms.tsx":"5","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/description.tsx":"6","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/listing.tsx":"7","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/location.tsx":"8","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/room.tsx":"9","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/hosting/listings.tsx":"10","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/index.tsx":"11","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/index.tsx":"12","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/hosting/index.tsx":"13","/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/store/listingstore.ts":"14","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/Button.tsx":"15","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/index.ts":"16","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/home/AccountMenu.tsx":"17","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/Select.tsx":"18","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/LocationAutocomplete.tsx":"19","/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/store/authstore.ts":"20","/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/helpers/useOutsideWState.ts":"21","/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/helpers/useOutside.ts":"22","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/ButtonWithGradient.tsx":"23","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/DateInput.tsx":"24","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/Input.tsx":"25","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/Popup.tsx":"26","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/InputSimple.tsx":"27","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/auth/LoginForm.tsx":"28","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/auth/SignupForm.tsx":"29","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/home/index.ts":"30","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/index.ts":"31","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/auth/index.ts":"32","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/hosting/index.ts":"33","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/ListingSync.tsx":"34","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/hosting/ListingItemPopup.tsx":"35","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/hosting/HostingHeader.tsx":"36","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/CheckBox.tsx":"37","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/CompletionIndicator.tsx":"38","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/Label.tsx":"39","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/RadioButton.tsx":"40","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/Title.tsx":"41","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/NavControlls.tsx":"42","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/Layout.tsx":"43","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/InlineCounter.tsx":"44","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/ListingHeader.tsx":"45","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/Header.tsx":"46","/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/consts/FormTitleParam.ts":"47","/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/helpers/useIsAuth.ts":"48","/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/apollo/client.ts":"49","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/HeaderButton.tsx":"50","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/home/AccountPopup.tsx":"51","/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/helpers/useSync.ts":"52","/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/helpers/useSaveListing.ts":"53"},{"size":783,"mtime":1607208809502,"results":"54","hashOfConfig":"55"},{"size":425,"mtime":1607193850472,"results":"56","hashOfConfig":"55"},{"size":1597,"mtime":1607211176622,"results":"57","hashOfConfig":"55"},{"size":4334,"mtime":1607200531332,"results":"58","hashOfConfig":"55"},{"size":2345,"mtime":1607194603632,"results":"59","hashOfConfig":"55"},{"size":3175,"mtime":1607253571957,"results":"60","hashOfConfig":"55"},{"size":1155,"mtime":1607208773542,"results":"61","hashOfConfig":"55"},{"size":5290,"mtime":1607194556672,"results":"62","hashOfConfig":"55"},{"size":1824,"mtime":1607194337052,"results":"63","hashOfConfig":"55"},{"size":4245,"mtime":1607252648027,"results":"64","hashOfConfig":"55"},{"size":2429,"mtime":1607211676882,"results":"65","hashOfConfig":"55"},{"size":2579,"mtime":1607204513002,"results":"66","hashOfConfig":"55"},{"size":988,"mtime":1607201256672,"results":"67","hashOfConfig":"55"},{"size":660,"mtime":1607208150052,"results":"68","hashOfConfig":"55"},{"size":900,"mtime":1607168931415,"results":"69","hashOfConfig":"55"},{"size":278,"mtime":1607211508262,"results":"70","hashOfConfig":"55"},{"size":4527,"mtime":1607252044537,"results":"71","hashOfConfig":"55"},{"size":4382,"mtime":1607204290442,"results":"72","hashOfConfig":"55"},{"size":3223,"mtime":1607208761972,"results":"73","hashOfConfig":"55"},{"size":547,"mtime":1607208160592,"results":"74","hashOfConfig":"55"},{"size":551,"mtime":1607168931525,"results":"75","hashOfConfig":"55"},{"size":439,"mtime":1607168931505,"results":"76","hashOfConfig":"55"},{"size":3539,"mtime":1607208446402,"results":"77","hashOfConfig":"55"},{"size":2866,"mtime":1607208534482,"results":"78","hashOfConfig":"55"},{"size":3629,"mtime":1607168931415,"results":"79","hashOfConfig":"55"},{"size":973,"mtime":1607204328492,"results":"80","hashOfConfig":"55"},{"size":3411,"mtime":1607168931455,"results":"81","hashOfConfig":"55"},{"size":1845,"mtime":1607203706262,"results":"82","hashOfConfig":"55"},{"size":3018,"mtime":1607203718222,"results":"83","hashOfConfig":"55"},{"size":31,"mtime":1607211599112,"results":"84","hashOfConfig":"55"},{"size":400,"mtime":1607203766902,"results":"85","hashOfConfig":"55"},{"size":57,"mtime":1607168931425,"results":"86","hashOfConfig":"55"},{"size":67,"mtime":1607168931435,"results":"87","hashOfConfig":"55"},{"size":1400,"mtime":1607253144807,"results":"88","hashOfConfig":"55"},{"size":1497,"mtime":1607168931435,"results":"89","hashOfConfig":"55"},{"size":1173,"mtime":1607203743422,"results":"90","hashOfConfig":"55"},{"size":1145,"mtime":1607168931445,"results":"91","hashOfConfig":"55"},{"size":1440,"mtime":1607203758292,"results":"92","hashOfConfig":"55"},{"size":602,"mtime":1607168931465,"results":"93","hashOfConfig":"55"},{"size":963,"mtime":1607168931475,"results":"94","hashOfConfig":"55"},{"size":641,"mtime":1607168931475,"results":"95","hashOfConfig":"55"},{"size":2402,"mtime":1607278971337,"results":"96","hashOfConfig":"55"},{"size":875,"mtime":1607168931465,"results":"97","hashOfConfig":"55"},{"size":2019,"mtime":1607168931455,"results":"98","hashOfConfig":"55"},{"size":982,"mtime":1607168931465,"results":"99","hashOfConfig":"55"},{"size":433,"mtime":1607168931415,"results":"100","hashOfConfig":"55"},{"size":398,"mtime":1607168931505,"results":"101","hashOfConfig":"55"},{"size":459,"mtime":1607208584962,"results":"102","hashOfConfig":"55"},{"size":282,"mtime":1607168931505,"results":"103","hashOfConfig":"55"},{"size":738,"mtime":1607211648322,"results":"104","hashOfConfig":"55"},{"size":2446,"mtime":1607212546642,"results":"105","hashOfConfig":"55"},{"size":650,"mtime":1607253372967,"results":"106","hashOfConfig":"55"},{"size":471,"mtime":1607253348427,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pjmo5o",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"112"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tama/vscode/projects/airbnbclone/packages/web/src/index.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/reportWebVitals.ts",[],["223","224"],"/home/tama/vscode/projects/airbnbclone/packages/web/src/Router.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/amenities.tsx",["225"],"import React, { useEffect, useState } from \"react\";\nimport { User } from \"@airbnb/common\";\nimport { USER_DATA } from \"@airbnb/controller\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  Title,\n  Layout,\n  ListingHeader,\n  NavControlls,\n  CheckBox,\n  Label,\n} from \"../../components\";\nimport { useListingStore } from \"../../utils/store/listingstore\";\n\ninterface Props {}\n\nexport function Amenities(props: Props) {\n  const { data } = useQuery<{ data: User }>(USER_DATA);\n  const [amenities, setAmenities] = useState<string[]>([]);\n\n  const storeAmenities = useListingStore((state) => state.listing)?.amenities;\n  useEffect(() => {\n    if (storeAmenities) setAmenities(storeAmenities);\n  }, [storeAmenities]);\n\n  const handleSetAmenty = (amenity: string) => {\n    if (amenities.find((elem) => elem === amenity)) {\n      setAmenities(amenities.filter((elem) => elem !== amenity));\n    } else setAmenities(amenities.concat(amenity));\n  };\n\n  return (\n    <React.Fragment>\n      <ListingHeader routename={\"amenities\"} />\n      <Layout formstyle={{ paddingBottom: 100 }}>\n        <React.Fragment>\n          <Title title={\"What amenities do you offer?\"} />\n          <Label\n            label={\n              \"These are just the amenities guests usually expect, but you can add even more after you publish.\"\n            }\n            size={16}\n          />\n          <CheckBox\n            label={\"Essentials\"}\n            selected={!!amenities.find((elem) => elem === \"essentials\")}\n            onChange={() => handleSetAmenty(\"essentials\")}\n          />\n          <CheckBox\n            label={\"Wifi\"}\n            selected={!!amenities.find((elem) => elem === \"Wifi\")}\n            onChange={() => handleSetAmenty(\"Wifi\")}\n          />\n          <CheckBox\n            label={\"TV\"}\n            selected={!!amenities.find((elem) => elem === \"TV\")}\n            onChange={() => handleSetAmenty(\"TV\")}\n          />\n          <CheckBox\n            label={\"Heat\"}\n            selected={!!amenities.find((elem) => elem === \"Heat\")}\n            onChange={() => handleSetAmenty(\"Heat\")}\n          />\n          <CheckBox\n            label={\"Air conditioning\"}\n            selected={!!amenities.find((elem) => elem === \"Air conditioning\")}\n            onChange={() => handleSetAmenty(\"Air conditioning\")}\n          />\n          <CheckBox\n            label={\"Iron\"}\n            selected={!!amenities.find((elem) => elem === \"Iron\")}\n            onChange={() => handleSetAmenty(\"Iron\")}\n          />\n          <CheckBox\n            label={\"Shampoo\"}\n            selected={!!amenities.find((elem) => elem === \"Shampoo\")}\n            onChange={() => handleSetAmenty(\"Shampoo\")}\n          />\n          <CheckBox\n            label={\"Hair dryer\"}\n            selected={!!amenities.find((elem) => elem === \"Hair dryer\")}\n            onChange={() => handleSetAmenty(\"Hair dryer\")}\n          />\n          <CheckBox\n            label={\"Breakfast, coffee, tea\"}\n            selected={\n              !!amenities.find((elem) => elem === \"Breakfast, coffee, tea\")\n            }\n            onChange={() => handleSetAmenty(\"Breakfast, coffee, tea\")}\n          />\n          <CheckBox\n            label={\"Desk/workspace\"}\n            selected={!!amenities.find((elem) => elem === \"Desk/workspace\")}\n            onChange={() => handleSetAmenty(\"Desk/workspace\")}\n          />\n          <CheckBox\n            label={\"Fireplace\"}\n            selected={!!amenities.find((elem) => elem === \"Fireplace\")}\n            onChange={() => handleSetAmenty(\"Fireplace\")}\n          />\n          <CheckBox\n            label={\"Closet/drawers\"}\n            selected={!!amenities.find((elem) => elem === \"Closet/drawers\")}\n            onChange={() => handleSetAmenty(\"Closet/drawers\")}\n          />\n          <CheckBox\n            label={\"Private entrance\"}\n            selected={!!amenities.find((elem) => elem === \"Private entrance\")}\n            onChange={() => handleSetAmenty(\"Private entrance\")}\n          />\n        </React.Fragment>\n      </Layout>\n      <Layout\n        style={{ position: \"fixed\", bottom: 0 }}\n        formstyle={{ paddingBottom: 0 }}\n      >\n        <NavControlls\n          backLink={\"/become-a-host/location\"}\n          continueLink={\"/become-a-host/description\"}\n          listingArgs={{ amenities }}\n        />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/bedrooms.tsx",["226"],"import React, { useEffect, useState } from \"react\";\nimport { User } from \"@airbnb/common\";\nimport { USER_DATA } from \"@airbnb/controller\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  Title,\n  Layout,\n  ListingHeader,\n  NavControlls,\n  Label,\n  InlineCounter,\n  Select,\n} from \"../../components\";\nimport { useListingStore } from \"../../utils/store/listingstore\";\n\ninterface Props {}\n\nexport function Bedrooms(props: Props) {\n  const { data } = useQuery<{ data: User }>(USER_DATA);\n  const nguests = useListingStore((state) => state.listing)?.nguests;\n  useEffect(() => {\n    if (nguests) setGuests(nguests);\n  }, [nguests]);\n  const [guests, setGuests] = useState(1);\n  const [bedCount, setBedCount] = useState(1);\n  const [bedRoomCount, setBedRoomCount] = useState(1);\n  const roomArray = Array.from(Array(50).keys()).map(\n    (i) => `${i + 1} bedrooms`\n  );\n  return (\n    <React.Fragment>\n      <ListingHeader routename={\"bedrooms\"} />\n      <Layout formstyle={{ paddingBottom: 100 }}>\n        <React.Fragment>\n          <Title title={\"How many guests can your place accommodate?\"} />\n          <Label\n            label={\n              \"Check that you have enough beds to accommodate all your guests comfortably.\"\n            }\n            size={16}\n          />\n          <InlineCounter\n            count={guests}\n            onChange={(count: number) => setGuests(count)}\n            label={\"Guests\"}\n            max={16}\n            min={1}\n          />\n          <Label label={\"How many bedrooms can guests use?\"} size={16} />\n          <Select\n            data={roomArray}\n            selected={bedRoomCount}\n            setSelected={(count) => setBedRoomCount(count)}\n          />\n          <Label label={\"How many beds can guests use?\"} size={16} />\n          <InlineCounter\n            count={bedCount}\n            onChange={(count: number) => setBedCount(count)}\n            label={\"Beds\"}\n            min={1}\n          />\n        </React.Fragment>\n      </Layout>\n      <Layout style={{ position: \"fixed\", bottom: 0 }}>\n        <NavControlls\n          continueLink={\"/become-a-host/location\"}\n          backLink={\"/become-a-host/room\"}\n          listingArgs={{\n            nguests: guests,\n            beds: bedCount,\n            bedrooms: bedRoomCount,\n          }}\n        />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/description.tsx",["227","228"],"/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/listing.tsx",["229","230","231"],"/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/location.tsx",["232","233","234","235"],"import React, { useEffect, useState } from \"react\";\nimport { Listing, User } from \"@airbnb/common\";\nimport { USER_DATA } from \"@airbnb/controller\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  Title,\n  Layout,\n  ListingHeader,\n  NavControlls,\n  Label,\n  InputSimple,\n} from \"../../components\";\nimport { useListingStore } from \"../../utils/store/listingstore\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { CountryDropdown } from \"react-country-region-selector\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles({\n  select: {\n    width: \"100%\",\n    height: 56,\n    borderRadius: 8,\n    border: `1px solid #afafaf`,\n    paddingLeft: 10,\n  },\n});\ninterface Props {}\n\nconst schema = yup.object().shape({\n  country: yup.string().required(),\n  street: yup.string().required(),\n  city: yup.string().required(),\n  state: yup.string().required(),\n  zip: yup.string().required(),\n});\n\ntype FormInput = {\n  country: string;\n  street: string;\n  city: string;\n  state: string;\n  zip: string;\n};\n\nexport function Location(props: Props) {\n  const styles = useStyles();\n  const { data } = useQuery<{ data: User }>(USER_DATA);\n  const listing = useListingStore((state) => state.listing);\n  const { errors, setValue, getValues, control } = useForm<FormInput>({\n    resolver: yupResolver(schema as any),\n  });\n  useEffect(() => {\n    if (listing?.city) setValue(\"city\", listing?.city);\n    if (listing?.country) setValue(\"country\", listing?.country);\n    if (listing?.state) setValue(\"state\", listing?.state);\n    if (listing?.street) setValue(\"street\", listing?.street);\n    if (listing?.zip) setValue(\"zip\", listing?.zip);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <ListingHeader routename={\"bedrooms\"} />\n      <Layout formstyle={{ paddingBottom: 100 }}>\n        <React.Fragment>\n          <Title title={\"Where’s your place located?\"} />\n          <Label\n            label={\n              \"Guests will only get your exact address once they’ve booked a reservation.\"\n            }\n            size={16}\n          />\n          <Controller\n            control={control}\n            render={({ onChange, onBlur, value }) => (\n              <CountryDropdown\n                value={value}\n                onChange={onChange}\n                onBlur={onBlur}\n                classes={styles.select}\n              />\n            )}\n            name=\"country\"\n            rules={{ required: true }}\n            defaultValue=\"\"\n          />\n          <Controller\n            control={control}\n            render={({ onChange, onBlur, value }) => (\n              <InputSimple\n                label={\"Street address\"}\n                error={!!errors.street}\n                errmsg={errors.street?.message}\n                value={value}\n                onBlur={onBlur}\n                onChange={onChange}\n                name={\"street\"}\n              />\n            )}\n            name=\"street\"\n            rules={{ required: true }}\n            defaultValue=\"\"\n          />\n          <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n            <Controller\n              control={control}\n              render={({ onChange, onBlur, value }) => (\n                <InputSimple\n                  label={\"City\"}\n                  contStyle={{ width: \"48%\" }}\n                  value={value}\n                  onBlur={onBlur}\n                  onChange={onChange}\n                  error={!!errors.city}\n                  errmsg={errors.city?.message}\n                  name={\"city\"}\n                />\n              )}\n              name=\"city\"\n              rules={{ required: true }}\n              defaultValue=\"\"\n            />\n            <Controller\n              control={control}\n              render={({ onChange, onBlur, value }) => (\n                <InputSimple\n                  label={\"State\"}\n                  contStyle={{ width: \"48%\", marginLeft: \"auto\" }}\n                  value={value}\n                  onBlur={onBlur}\n                  onChange={onChange}\n                  error={!!errors.state}\n                  errmsg={errors.state?.message}\n                  name={\"state\"}\n                />\n              )}\n              name=\"state\"\n              rules={{ required: true }}\n              defaultValue=\"\"\n            />\n            <Controller\n              control={control}\n              render={({ onChange, onBlur, value }) => (\n                <InputSimple\n                  label={\"Zip code\"}\n                  value={value}\n                  onBlur={onBlur}\n                  onChange={onChange}\n                  contStyle={{ width: \"48%\" }}\n                  error={!!errors.zip}\n                  errmsg={errors.zip?.message}\n                  name={\"zip\"}\n                />\n              )}\n              name=\"zip\"\n              rules={{ required: true }}\n              defaultValue=\"\"\n            />\n          </div>\n        </React.Fragment>\n      </Layout>\n      <Layout style={{ position: \"fixed\", bottom: 0 }}>\n        <NavControlls\n          continueLink={\"/become-a-host/amenities\"}\n          backLink={\"/become-a-host/bedrooms\"}\n          getValues={getValues}\n        />\n      </Layout>\n    </React.Fragment>\n  );\n}\n","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/room.tsx",["236"],"import React, { useState } from \"react\";\nimport { PropertyType, User } from \"@airbnb/common\";\nimport { USER_DATA } from \"@airbnb/controller\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  Title,\n  Layout,\n  ListingHeader,\n  Select,\n  NavControlls,\n  RadioButton,\n  Label,\n} from \"../../components\";\n\ninterface Props {}\n\nconst dataFromEnum = Object.entries(PropertyType)\n  .filter((e) => !isNaN(e[0] as any))\n  .map((e) => ({ name: e[1], id: e[0] }));\n\nexport const Room = (props: Props) => {\n  const { data } = useQuery<{ data: User }>(USER_DATA);\n  const [dedicated, setDedicated] = useState(false);\n  const [propType, setPropType] = useState(PropertyType.House.valueOf());\n\n  return (\n    <React.Fragment>\n      <ListingHeader routename={\"room\"} />\n      <Layout>\n        <React.Fragment>\n          <Title title={\"What kind of place are you listing?\"} />\n          <Select\n            label={\"Choose a property type\"}\n            data={dataFromEnum.map((i) => i.name)}\n            selected={propType}\n            setSelected={(select: number) => setPropType(select)}\n          />\n          <Label label={\"Is this set up as a dedicated guest space?\"} bold />\n          <RadioButton\n            selected={dedicated}\n            onChange={() => setDedicated(true)}\n            label={\"Yes, it’s primarily set up for guests\"}\n          />\n          <RadioButton\n            selected={!dedicated}\n            onChange={() => setDedicated(false)}\n            label={\"No, I keep my personal belongings here\"}\n          />\n        </React.Fragment>\n      </Layout>\n      <Layout style={{ position: \"fixed\", bottom: 0 }}>\n        <NavControlls\n          continueLink={\"/become-a-host/bedrooms\"}\n          listingArgs={{ proptype: propType, dedicated: dedicated }}\n        />\n      </Layout>\n    </React.Fragment>\n  );\n};\n","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/hosting/listings.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/index.tsx",["237"],"/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/become-a-host/index.tsx",["238"],"import React, { useState } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { KindOfPlace, KindOfPlaceEnum, User } from \"@airbnb/common\";\nimport { USER_DATA } from \"@airbnb/controller\";\nimport { useQuery } from \"@apollo/client\";\nimport { Select } from \"../../components/listings/Select\";\nimport { Button } from \"../../components/Button\";\nimport { LocationAutoComplete } from \"../../components/listings/LocationAutocomplete\";\nimport { useListingStore } from \"../../utils/store/listingstore\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = createUseStyles({\n  view: {\n    width: 385,\n    maxWidth: \"50%\",\n    paddingTop: 40,\n    paddingBottom: 40,\n    marginLeft: \"10%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  title: {\n    fontFamily: \"poppins\",\n    fontSize: 29,\n  },\n  subtitle: {\n    fontFamily: \"poppins\",\n    fontSize: 23,\n    margin: 0,\n  },\n  selectCont: {\n    width: \"100%\",\n    display: \"flex\",\n  },\n});\n\ninterface Props {}\n\nconst dataFromEnum = Object.entries(KindOfPlace)\n  .filter((e) => !isNaN(e[0] as any))\n  .map((e) => ({ name: e[1], id: e[0] }));\n\nexport const BecomeAHost = (props: Props) => {\n  const { data } = useQuery<{ data: User }>(USER_DATA);\n  const styles = useStyles();\n  const [guests, setGuests] = useState(1);\n  const [placeType, setPlaceType] = useState(KindOfPlace.EntirePlace.valueOf());\n  const guestsArray = Array.from(Array(16).keys()).map(\n    (i) => `for ${i + 1} guests`\n  );\n  const updateListing = useListingStore((state) => state.updateListing);\n\n  const handleContinue = () => {\n    console.log(\"saved data\");\n    updateListing({\n      nguests: guests,\n      kind: Object(KindOfPlaceEnum)[placeType],\n    });\n  };\n\n  return (\n    <div className={styles.view}>\n      <p className={styles.title}>\n        Hi, Tomas! Let’s get started listing your space.\n      </p>\n      <p className={styles.subtitle}>What kind of place do you have?</p>\n      <div className={styles.selectCont}>\n        <Select\n          data={guestsArray}\n          selected={guests}\n          setSelected={(guests: number) => setGuests(guests)}\n        />\n        <Select\n          data={dataFromEnum.map((i) => i.name)}\n          contStyle={{ marginLeft: 6 }}\n          selected={placeType}\n          setSelected={(select: number) => setPlaceType(select)}\n        />\n      </div>\n      <LocationAutoComplete />\n      <Link to={\"/become-a-host/room\"}>\n        <Button\n          title={\"Continue\"}\n          style={{ marginTop: 8 }}\n          onClick={() => handleContinue()}\n        />\n      </Link>\n    </div>\n  );\n};\n","/home/tama/vscode/projects/airbnbclone/packages/web/src/pages/hosting/index.tsx",["239"],"import React from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { User } from \"@airbnb/common\";\nimport { USER_DATA } from \"@airbnb/controller\";\nimport { useQuery } from \"@apollo/client\";\nimport { HostingHeader, Layout } from \"../../components\";\n\nconst useStyles = createUseStyles({\n  view: {\n    width: 385,\n    maxWidth: \"50%\",\n    paddingTop: 40,\n    paddingBottom: 40,\n    marginLeft: \"10%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  title: {\n    fontFamily: \"poppins\",\n    fontSize: 29,\n  },\n  subtitle: {\n    fontFamily: \"poppins\",\n    fontSize: 23,\n    margin: 0,\n  },\n  selectCont: {\n    width: \"100%\",\n    display: \"flex\",\n  },\n});\n\ninterface Props {}\n\nexport const Hosting = (props: Props) => {\n  const { data } = useQuery<{ data: User }>(USER_DATA);\n  const styles = useStyles();\n\n  return (\n    <React.Fragment>\n      <HostingHeader />\n      <Layout>\n        <p className={styles.title}>Dashboard</p>\n      </Layout>\n    </React.Fragment>\n  );\n};\n","/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/store/listingstore.ts",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/Button.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/index.ts",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/home/AccountMenu.tsx",["240","241","242","243"],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/Select.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/LocationAutocomplete.tsx",["244"],"/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/store/authstore.ts",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/helpers/useOutsideWState.ts",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/helpers/useOutside.ts",["245"],"import { useEffect } from \"react\"\n\nexport const useOutside = (ref: any, setOutside: () => void) => {\n  useEffect(() => {\n    const handleClickOutside = (event: any) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setOutside()\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside)\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside)\n    }\n  }, [ref])\n}\n","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/ButtonWithGradient.tsx",["246"],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/DateInput.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/Input.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/Popup.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/InputSimple.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/auth/LoginForm.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/auth/SignupForm.tsx",["247"],"import React from \"react\";\nimport { Input } from \"../Input\";\nimport { ButtonWithGradient } from \"../ButtonWithGradient\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { ISingupInputs, signupSchema, User } from \"@airbnb/common\";\nimport { REGISTER } from \"@airbnb/controller\";\nimport { useMutation } from \"@apollo/client\";\nimport { DateInput } from \"../DateInput\";\n\nexport const SignupForm = () => {\n  const [register, data] = useMutation<{ register: User }>(REGISTER);\n  const { control, handleSubmit, errors } = useForm<ISingupInputs>({\n    resolver: yupResolver(signupSchema),\n  });\n  const onSubmit = (data: ISingupInputs) => {\n    register({ variables: data });\n  };\n\n  return (\n    <React.Fragment>\n      <Controller\n        control={control}\n        render={({ onChange, onBlur, value }) => (\n          <Input\n            label={\"First name\"}\n            onChange={onChange}\n            value={value}\n            onBlur={onBlur}\n            error={!!errors.email}\n            errmsg={errors.email?.message}\n          />\n        )}\n        name=\"firstname\"\n        rules={{ required: true }}\n        defaultValue=\"\"\n      />\n      <Controller\n        control={control}\n        render={({ onChange, onBlur, value }) => (\n          <Input\n            label={\"Last name\"}\n            onChange={onChange}\n            value={value}\n            onBlur={onBlur}\n            error={!!errors.email}\n            errmsg={errors.email?.message}\n          />\n        )}\n        name=\"lastname\"\n        rules={{ required: true }}\n        defaultValue=\"\"\n      />\n      <Controller\n        control={control}\n        render={({ onChange, onBlur, value }) => (\n          <Input\n            label={\"Email\"}\n            onChange={onChange}\n            value={value}\n            onBlur={onBlur}\n            error={!!errors.email}\n            errmsg={errors.email?.message}\n          />\n        )}\n        name=\"email\"\n        rules={{ required: true }}\n        defaultValue=\"\"\n      />\n      <Controller\n        control={control}\n        render={({ onChange, onBlur, value }) => (\n          <DateInput\n            label={\"Email\"}\n            onChange={onChange}\n            value={value}\n            onBlur={onBlur}\n            error={!!errors.email}\n            errmsg={errors.email?.message}\n          />\n        )}\n        name=\"email\"\n        rules={{ required: true }}\n        defaultValue=\"\"\n      />\n      <Controller\n        control={control}\n        render={({ onChange, onBlur, value }) => (\n          <Input\n            label={\"Password\"}\n            onChange={onChange}\n            value={value}\n            onBlur={onBlur}\n            pswd\n            error={!!errors.password}\n            errmsg={errors.password?.message}\n          />\n        )}\n        name=\"password\"\n        rules={{ required: true }}\n        defaultValue=\"\"\n      />\n      <ButtonWithGradient title={\"Sign up\"} onClick={handleSubmit(onSubmit)} />\n    </React.Fragment>\n  );\n};\n","/home/tama/vscode/projects/airbnbclone/packages/web/src/components/home/index.ts",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/index.ts",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/auth/index.ts",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/hosting/index.ts",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/ListingSync.tsx",["248","249","250","251","252","253"],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/hosting/ListingItemPopup.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/hosting/HostingHeader.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/CheckBox.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/CompletionIndicator.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/Label.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/RadioButton.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/Title.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/NavControlls.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/Layout.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/InlineCounter.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/listings/ListingHeader.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/Header.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/consts/FormTitleParam.ts",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/helpers/useIsAuth.ts",["254"],"/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/apollo/client.ts",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/HeaderButton.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/components/home/AccountPopup.tsx",[],"/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/helpers/useSync.ts",["255","256"],"/home/tama/vscode/projects/airbnbclone/packages/web/src/utils/helpers/useSaveListing.ts",["257"],{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":18,"column":11,"nodeType":"264","messageId":"265","endLine":18,"endColumn":15},{"ruleId":"262","severity":1,"message":"263","line":19,"column":11,"nodeType":"264","messageId":"265","endLine":19,"endColumn":15},{"ruleId":"262","severity":1,"message":"263","line":31,"column":11,"nodeType":"264","messageId":"265","endLine":31,"endColumn":15},{"ruleId":"266","severity":1,"message":"267","line":40,"column":6,"nodeType":"268","endLine":40,"endColumn":8,"suggestions":"269"},{"ruleId":"262","severity":1,"message":"270","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":17},{"ruleId":"262","severity":1,"message":"271","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":14},{"ruleId":"262","severity":1,"message":"263","line":10,"column":11,"nodeType":"264","messageId":"265","endLine":10,"endColumn":15},{"ruleId":"262","severity":1,"message":"272","line":1,"column":28,"nodeType":"264","messageId":"265","endLine":1,"endColumn":36},{"ruleId":"262","severity":1,"message":"270","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":17},{"ruleId":"262","severity":1,"message":"263","line":49,"column":11,"nodeType":"264","messageId":"265","endLine":49,"endColumn":15},{"ruleId":"266","severity":1,"message":"273","line":60,"column":6,"nodeType":"268","endLine":60,"endColumn":8,"suggestions":"274"},{"ruleId":"262","severity":1,"message":"263","line":22,"column":11,"nodeType":"264","messageId":"265","endLine":22,"endColumn":15},{"ruleId":"275","severity":1,"message":"276","line":79,"column":7,"nodeType":"277","endLine":79,"endColumn":64},{"ruleId":"262","severity":1,"message":"263","line":44,"column":11,"nodeType":"264","messageId":"265","endLine":44,"endColumn":15},{"ruleId":"262","severity":1,"message":"263","line":36,"column":11,"nodeType":"264","messageId":"265","endLine":36,"endColumn":15},{"ruleId":"262","severity":1,"message":"278","line":6,"column":10,"nodeType":"264","messageId":"265","endLine":6,"endColumn":15},{"ruleId":"262","severity":1,"message":"279","line":7,"column":10,"nodeType":"264","messageId":"265","endLine":7,"endColumn":19},{"ruleId":"262","severity":1,"message":"280","line":8,"column":10,"nodeType":"264","messageId":"265","endLine":8,"endColumn":20},{"ruleId":"262","severity":1,"message":"281","line":9,"column":10,"nodeType":"264","messageId":"265","endLine":9,"endColumn":17},{"ruleId":"282","severity":1,"message":"283","line":97,"column":46,"nodeType":"284","messageId":"285","endLine":97,"endColumn":48},{"ruleId":"266","severity":1,"message":"286","line":14,"column":6,"nodeType":"268","endLine":14,"endColumn":11,"suggestions":"287"},{"ruleId":"266","severity":1,"message":"288","line":92,"column":6,"nodeType":"268","endLine":92,"endColumn":21,"suggestions":"289"},{"ruleId":"262","severity":1,"message":"263","line":12,"column":20,"nodeType":"264","messageId":"265","endLine":12,"endColumn":24},{"ruleId":"262","severity":1,"message":"290","line":1,"column":10,"nodeType":"264","messageId":"265","endLine":1,"endColumn":16},{"ruleId":"262","severity":1,"message":"291","line":1,"column":18,"nodeType":"264","messageId":"265","endLine":1,"endColumn":24},{"ruleId":"262","severity":1,"message":"292","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":21},{"ruleId":"262","severity":1,"message":"293","line":3,"column":17,"nodeType":"264","messageId":"265","endLine":3,"endColumn":26},{"ruleId":"262","severity":1,"message":"294","line":5,"column":10,"nodeType":"264","messageId":"265","endLine":5,"endColumn":25},{"ruleId":"262","severity":1,"message":"270","line":7,"column":10,"nodeType":"264","messageId":"265","endLine":7,"endColumn":17},{"ruleId":"266","severity":1,"message":"295","line":14,"column":6,"nodeType":"268","endLine":14,"endColumn":18,"suggestions":"296"},{"ruleId":"266","severity":1,"message":"297","line":13,"column":6,"nodeType":"268","endLine":13,"endColumn":8,"suggestions":"298"},{"ruleId":"266","severity":1,"message":"299","line":20,"column":6,"nodeType":"268","endLine":20,"endColumn":15,"suggestions":"300"},{"ruleId":"262","severity":1,"message":"263","line":8,"column":16,"nodeType":"264","messageId":"265","endLine":8,"endColumn":20},"no-native-reassign",["301"],"no-negated-in-lhs",["302"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'listing?.description', 'listing?.price', 'listing?.title', and 'setValue'. Either include them or remove the dependency array.","ArrayExpression",["303"],"'Listing' is defined but never used.","'FIND' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'listing?.city', 'listing?.country', 'listing?.state', 'listing?.street', 'listing?.zip', and 'setValue'. Either include them or remove the dependency array.",["304"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Popup' is defined but never used.","'LoginForm' is defined but never used.","'SignupForm' is defined but never used.","'GrClose' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'setOutside'. Either include it or remove the dependency array. If 'setOutside' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["305"],"React Hook useEffect has a missing dependency: 'ref'. Either include it or remove the dependency array. If 'setPositionPercent' needs the current value of 'ref', you can also switch to useReducer instead of useState and read 'ref' in the reducer.",["306"],"'UPDATE' is defined but never used.","'CREATE' is defined but never used.","'useMutation' is defined but never used.","'useEffect' is defined but never used.","'useListingStore' is defined but never used.","React Hook useEffect has a missing dependency: 'setAuth'. Either include it or remove the dependency array.",["307"],"React Hook useEffect has missing dependencies: 'listing?.id', 'save', and 'updateListing'. Either include them or remove the dependency array.",["308"],"React Hook useEffect has missing dependencies: 'save' and 'updateListing'. Either include them or remove the dependency array.",["309"],"no-global-assign","no-unsafe-negation",{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},"Update the dependencies array to be: [listing?.description, listing?.price, listing?.title, setValue]",{"range":"324","text":"325"},"Update the dependencies array to be: [listing?.city, listing?.country, listing?.state, listing?.street, listing?.zip, setValue]",{"range":"326","text":"327"},"Update the dependencies array to be: [ref, setOutside]",{"range":"328","text":"329"},"Update the dependencies array to be: [mousePosition, ref]",{"range":"330","text":"331"},"Update the dependencies array to be: [data?.data, setAuth]",{"range":"332","text":"333"},"Update the dependencies array to be: [listing?.id, save, updateListing]",{"range":"334","text":"335"},"Update the dependencies array to be: [listing, save, updateListing]",{"range":"336","text":"337"},[1163,1165],"[listing?.description, listing?.price, listing?.title, setValue]",[1752,1754],"[listing?.city, listing?.country, listing?.state, listing?.street, listing?.zip, setValue]",[430,435],"[ref, setOutside]",[2395,2410],"[mousePosition, ref]",[441,453],"[data?.data, setAuth]",[448,450],"[listing?.id, save, updateListing]",[607,616],"[listing, save, updateListing]"]